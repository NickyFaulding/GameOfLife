          //small exploder pattern within the grid          
          
          button[8,10]->BackColor = System::Drawing::SystemColors::ControlDarkDark;

					button[9, 10]->BackColor = System::Drawing::SystemColors::ControlDarkDark;
					button[9, 11]->BackColor = System::Drawing::SystemColors::ControlDarkDark;
					button[9, 9]->BackColor = System::Drawing::SystemColors::ControlDarkDark;

					button[10, 11]->BackColor = System::Drawing::SystemColors::ControlDarkDark;
					button[10, 9]->BackColor = System::Drawing::SystemColors::ControlDarkDark;
					
					button[11, 10]->BackColor = System::Drawing::SystemColors::ControlDarkDark;
					
					
	 // checking to see if neighbour cells are alive
	 
	 
  for (int i = 0 ; i< size; i++)
  {
    for(int j = 0; j < size; j++)
    {
      if (b[i,j]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
      {
       if (b[i-1,j-1]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
        {
          HowManyNeighbours = HowManyNeighBours + 1;
        }

       else if (b[i,j-1]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
        {
          HowManyNeighbours = HowManyNeighBours + 1;
        }
        
        else if (b[i+1,j-1]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
        {
          HowManyNeighbours = HowManyNeighBours + 1;
        }

        else if (b[i-1,j+1]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
        { 
          HowManyNeighbours = HowManyNeighBours + 1;
        }

        else if (b[i+1,j]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
        {
          HowManyNeighbours = HowManyNeighBours + 1;
        }

        else if (b[i,j+1]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
        {
          HowManyNeighbours = HowManyNeighBours + 1;
        }

        else if (b[i+1,j+1]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
        {
          HowManyNeighbours = HowManyNeighBours + 1;
        }

        else if (b[i-1,j]->BackColor = System::Drawing::SystemColors::ControlDarkDark)
        {
          HowManyNeighbours = HowManyNeighBours + 1;
        }
      }
    }
  }
  
  
  //attempt at timer loop for the start/continue button
  if (System::Convert::ToInt16(numericUpDown1->Text) == 0)
        {
            for (sec = 0; sec < 100000; sec++)
            {
                timer2->Start();
                

                for (int i = 0; i < 6; ++i)
                {
                    sec++;

                    int limit = 6;

                    while (sec == 5)
                    {
                        CheckCells();
                        sec = 0;
                    }

                    if (sec == limit)
                    {
                        sec = 0;
                        timer2->Stop();

                    }


                }
            }
        }
	
	//attempt at text file within the close button
	
	
void WriteToText() {

        ofstream record;

        record.open("Record.csv", ios::out);

        for (int i = 0; i < size; i++)
        {
            for (int j = 0; j < size; j++)
            {
                record << (i, j);
            }
        }

        record.close();
        
    }
  
  
